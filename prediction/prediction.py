# -*- coding: utf-8 -*-
"""Datathon.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/179nHT0ujhoDFcHw6be-_BVHLqIgeTtD_
"""

from google.colab import drive
drive.mount('/content/drive')

cd drive

cd My Drive

cd Datathon

!ls

import pandas as pd
import seaborn as sns # data visualization library  
import matplotlib.pyplot as plt

train_data = pd.read_csv("Yes_Bank_Train.csv")

train_data.head()

train_data.shape

train_data.info()

null_columns=train_data.columns[train_data.isnull().any()]
train_data[null_columns].isnull().sum()

train_data.boxplot('credit_amount','credit_history',rot = 30,figsize=(5,6))
train_data.boxplot('credit_amount','housing_type',rot = 30,figsize=(5,6))
train_data.boxplot('credit_amount','employment_st',rot = 30,figsize=(5,6))

y_train_data = train_data.credit_amount	
list = ['serial number','age','credit_amount']
x_train_data = train_data.drop(list,axis = 1 )

y_train_data.head()

x_train_data.head()

x_train_data.shape

x_train_data = pd.get_dummies(x_train_data)

f,ax = plt.subplots(figsize=(18, 18))
sns.heatmap(x_train_data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)

x_train_data.shape

test_data = pd.read_csv("Yes_Bank_Test_int.csv")

test_data.head()

test_data.shape

test_data.info()

null_columns1=test_data.columns[test_data.isnull().any()]
test_data[null_columns1].isnull().sum()

list2 = ['age','serial number']
x_test_data = test_data.drop(list2,axis=1)

x_test_data = pd.get_dummies(x_test_data)

x_test_data.shape

from sklearn.neighbors import KNeighborsRegressor

neigh = KNeighborsRegressor(n_neighbors=5,weights="distance")
neigh.fit(x_train_data, y_train_data) 
neigh.score(x_train_data,y_train_data)

prediction = neigh.predict(x_test_data)

x = pd.Series(data=prediction, copy='credit_amount')

x.head()

sample_submission = pd.read_csv("sample_submission.csv")

sample_submission['credit_amount'] = x

sample_submission.head()

sample_submission.tail()

sample_submission.to_csv('sample_submission.csv', encoding='utf-8', index=False)

